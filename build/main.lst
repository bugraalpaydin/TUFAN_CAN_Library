ARM GAS  /tmp/ccAGqcSK.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "CAN_Driver.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccAGqcSK.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c ****   CAN_CLOCK_ENABLE();
  77:Core/Src/main.c ****   CAN_GPIO_Init();
  78:Core/Src/main.c ****   CAN_Setup();
  79:Core/Src/main.c ****   //CAN_TestMode(CAN_BTR_SILM | CAN_BTR_LBKM);
  80:Core/Src/main.c ****   CAN_SetFilter(33, STANDARD_FORMAT);
  81:Core/Src/main.c ****   CAN_StartNormalMode();
  82:Core/Src/main.c ****   CAN_WaitReady();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   CAN_TxMsg.id = 33;
  85:Core/Src/main.c ****   for(int i = 0; i<8; i++) CAN_TxMsg.data[i] = 1;
  86:Core/Src/main.c ****   CAN_TxMsg.len = 1;
  87:Core/Src/main.c ****   CAN_TxMsg.format = STANDARD_FORMAT;
  88:Core/Src/main.c ****   CAN_TxMsg.type   = DATA_FRAME;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccAGqcSK.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c ****       if(CAN_TxRdy){
 109:Core/Src/main.c ****         CAN_TxRdy = 0;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****         CAN_WriteMessage(&CAN_TxMsg);
 112:Core/Src/main.c ****       }
 113:Core/Src/main.c ****       HAL_Delay(100000);
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccAGqcSK.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief GPIO Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_GPIO_Init(void)
 165:Core/Src/main.c **** {
  26              		.loc 1 165 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 166:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 167:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 170:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 170 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 170 3 view .LVU2
  37              		.loc 1 170 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 170 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 170 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 170 3 view .LVU6
 171:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 171 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 171 3 view .LVU8
  53              		.loc 1 171 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 171 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccAGqcSK.s 			page 5


  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 171 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 171 3 view .LVU12
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 174:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 175:Core/Src/main.c **** }
  65              		.loc 1 175 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE67:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	Error_Handler:
  86              	.LFB68:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void Error_Handler(void)
 186:Core/Src/main.c **** {
  87              		.loc 1 186 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 187:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 188:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 189:Core/Src/main.c ****   __disable_irq();
  93              		.loc 1 189 3 view .LVU15
  94              	.LBB6:
  95              	.LBI6:
  96              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccAGqcSK.s 			page 6


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccAGqcSK.s 			page 7


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccAGqcSK.s 			page 8


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  97              		.loc 2 140 27 view .LVU16
  98              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  99              		.loc 2 142 3 view .LVU17
 100              		.syntax unified
 101              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 102 0000 72B6     		cpsid i
 103              	@ 0 "" 2
 104              		.thumb
 105              		.syntax unified
 106              	.L6:
 107              	.LBE7:
 108              	.LBE6:
 190:Core/Src/main.c ****   while (1)
 109              		.loc 1 190 3 view .LVU18
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****   }
 110              		.loc 1 192 3 view .LVU19
 190:Core/Src/main.c ****   while (1)
 111              		.loc 1 190 9 view .LVU20
 112 0002 FEE7     		b	.L6
 113              		.cfi_endproc
 114              	.LFE68:
 116              		.section	.text.SystemClock_Config,"ax",%progbits
 117              		.align	1
 118              		.global	SystemClock_Config
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	SystemClock_Config:
 124              	.LFB66:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 125              		.loc 1 126 1 view -0
ARM GAS  /tmp/ccAGqcSK.s 			page 9


 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 64
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 10B5     		push	{r4, lr}
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 134 0002 90B0     		sub	sp, sp, #64
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137              		.loc 1 127 3 view .LVU22
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138              		.loc 1 127 22 is_stmt 0 view .LVU23
 139 0004 06AC     		add	r4, sp, #24
 140 0006 2822     		movs	r2, #40
 141 0008 0021     		movs	r1, #0
 142 000a 2046     		mov	r0, r4
 143 000c FFF7FEFF 		bl	memset
 144              	.LVL0:
 128:Core/Src/main.c **** 
 145              		.loc 1 128 3 is_stmt 1 view .LVU24
 128:Core/Src/main.c **** 
 146              		.loc 1 128 22 is_stmt 0 view .LVU25
 147 0010 0023     		movs	r3, #0
 148 0012 0193     		str	r3, [sp, #4]
 149 0014 0293     		str	r3, [sp, #8]
 150 0016 0393     		str	r3, [sp, #12]
 151 0018 0493     		str	r3, [sp, #16]
 152 001a 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 153              		.loc 1 133 3 is_stmt 1 view .LVU26
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154              		.loc 1 133 36 is_stmt 0 view .LVU27
 155 001c 0223     		movs	r3, #2
 156 001e 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157              		.loc 1 134 3 is_stmt 1 view .LVU28
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 158              		.loc 1 134 30 is_stmt 0 view .LVU29
 159 0020 0122     		movs	r2, #1
 160 0022 0A92     		str	r2, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161              		.loc 1 135 3 is_stmt 1 view .LVU30
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162              		.loc 1 135 41 is_stmt 0 view .LVU31
 163 0024 1022     		movs	r2, #16
 164 0026 0B92     		str	r2, [sp, #44]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 165              		.loc 1 136 3 is_stmt 1 view .LVU32
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 166              		.loc 1 136 34 is_stmt 0 view .LVU33
 167 0028 0D93     		str	r3, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 168              		.loc 1 137 3 is_stmt 1 view .LVU34
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccAGqcSK.s 			page 10


 169              		.loc 1 138 3 view .LVU35
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170              		.loc 1 138 32 is_stmt 0 view .LVU36
 171 002a 4FF4E013 		mov	r3, #1835008
 172 002e 0F93     		str	r3, [sp, #60]
 139:Core/Src/main.c ****   {
 173              		.loc 1 139 3 is_stmt 1 view .LVU37
 139:Core/Src/main.c ****   {
 174              		.loc 1 139 7 is_stmt 0 view .LVU38
 175 0030 2046     		mov	r0, r4
 176 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 177              	.LVL1:
 139:Core/Src/main.c ****   {
 178              		.loc 1 139 6 discriminator 1 view .LVU39
 179 0036 70B9     		cbnz	r0, .L11
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180              		.loc 1 146 3 is_stmt 1 view .LVU40
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181              		.loc 1 146 31 is_stmt 0 view .LVU41
 182 0038 0F23     		movs	r3, #15
 183 003a 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184              		.loc 1 148 3 is_stmt 1 view .LVU42
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185              		.loc 1 148 34 is_stmt 0 view .LVU43
 186 003c 0223     		movs	r3, #2
 187 003e 0293     		str	r3, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 188              		.loc 1 149 3 is_stmt 1 view .LVU44
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 189              		.loc 1 149 35 is_stmt 0 view .LVU45
 190 0040 0023     		movs	r3, #0
 191 0042 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192              		.loc 1 150 3 is_stmt 1 view .LVU46
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193              		.loc 1 150 36 is_stmt 0 view .LVU47
 194 0044 0493     		str	r3, [sp, #16]
 151:Core/Src/main.c **** 
 195              		.loc 1 151 3 is_stmt 1 view .LVU48
 151:Core/Src/main.c **** 
 196              		.loc 1 151 36 is_stmt 0 view .LVU49
 197 0046 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   {
 198              		.loc 1 153 3 is_stmt 1 view .LVU50
 153:Core/Src/main.c ****   {
 199              		.loc 1 153 7 is_stmt 0 view .LVU51
 200 0048 0121     		movs	r1, #1
 201 004a 01A8     		add	r0, sp, #4
 202 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 203              	.LVL2:
 153:Core/Src/main.c ****   {
 204              		.loc 1 153 6 discriminator 1 view .LVU52
 205 0050 18B9     		cbnz	r0, .L12
 157:Core/Src/main.c **** 
 206              		.loc 1 157 1 view .LVU53
 207 0052 10B0     		add	sp, sp, #64
ARM GAS  /tmp/ccAGqcSK.s 			page 11


 208              	.LCFI4:
 209              		.cfi_remember_state
 210              		.cfi_def_cfa_offset 8
 211              		@ sp needed
 212 0054 10BD     		pop	{r4, pc}
 213              	.L11:
 214              	.LCFI5:
 215              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 216              		.loc 1 141 5 is_stmt 1 view .LVU54
 217 0056 FFF7FEFF 		bl	Error_Handler
 218              	.LVL3:
 219              	.L12:
 155:Core/Src/main.c ****   }
 220              		.loc 1 155 5 view .LVU55
 221 005a FFF7FEFF 		bl	Error_Handler
 222              	.LVL4:
 223              		.cfi_endproc
 224              	.LFE66:
 226              		.section	.text.main,"ax",%progbits
 227              		.align	1
 228              		.global	main
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	main:
 234              	.LFB65:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 235              		.loc 1 65 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI6:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 244              		.loc 1 73 3 view .LVU57
 245 0002 FFF7FEFF 		bl	HAL_Init
 246              	.LVL5:
  76:Core/Src/main.c ****   CAN_GPIO_Init();
 247              		.loc 1 76 3 view .LVU58
 248 0006 FFF7FEFF 		bl	CAN_CLOCK_ENABLE
 249              	.LVL6:
  77:Core/Src/main.c ****   CAN_Setup();
 250              		.loc 1 77 3 view .LVU59
 251 000a FFF7FEFF 		bl	CAN_GPIO_Init
 252              	.LVL7:
  78:Core/Src/main.c ****   //CAN_TestMode(CAN_BTR_SILM | CAN_BTR_LBKM);
 253              		.loc 1 78 3 view .LVU60
 254 000e FFF7FEFF 		bl	CAN_Setup
 255              	.LVL8:
  80:Core/Src/main.c ****   CAN_StartNormalMode();
 256              		.loc 1 80 3 view .LVU61
 257 0012 0021     		movs	r1, #0
 258 0014 2120     		movs	r0, #33
ARM GAS  /tmp/ccAGqcSK.s 			page 12


 259 0016 FFF7FEFF 		bl	CAN_SetFilter
 260              	.LVL9:
  81:Core/Src/main.c ****   CAN_WaitReady();
 261              		.loc 1 81 3 view .LVU62
 262 001a FFF7FEFF 		bl	CAN_StartNormalMode
 263              	.LVL10:
  82:Core/Src/main.c **** 
 264              		.loc 1 82 3 view .LVU63
 265 001e FFF7FEFF 		bl	CAN_WaitReady
 266              	.LVL11:
  84:Core/Src/main.c ****   for(int i = 0; i<8; i++) CAN_TxMsg.data[i] = 1;
 267              		.loc 1 84 3 view .LVU64
  84:Core/Src/main.c ****   for(int i = 0; i<8; i++) CAN_TxMsg.data[i] = 1;
 268              		.loc 1 84 16 is_stmt 0 view .LVU65
 269 0022 124B     		ldr	r3, .L20
 270 0024 2122     		movs	r2, #33
 271 0026 1A60     		str	r2, [r3]
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 272              		.loc 1 85 3 is_stmt 1 view .LVU66
 273              	.LBB8:
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 274              		.loc 1 85 7 view .LVU67
 275              	.LVL12:
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 276              		.loc 1 85 11 is_stmt 0 view .LVU68
 277 0028 0023     		movs	r3, #0
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 278              		.loc 1 85 3 view .LVU69
 279 002a 04E0     		b	.L14
 280              	.LVL13:
 281              	.L15:
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 282              		.loc 1 85 28 is_stmt 1 discriminator 3 view .LVU70
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 283              		.loc 1 85 46 is_stmt 0 discriminator 3 view .LVU71
 284 002c 0F4A     		ldr	r2, .L20
 285 002e 1A44     		add	r2, r2, r3
 286 0030 0121     		movs	r1, #1
 287 0032 1171     		strb	r1, [r2, #4]
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 288              		.loc 1 85 24 is_stmt 1 discriminator 3 view .LVU72
 289 0034 0B44     		add	r3, r3, r1
 290              	.LVL14:
 291              	.L14:
  85:Core/Src/main.c ****   CAN_TxMsg.len = 1;
 292              		.loc 1 85 19 discriminator 1 view .LVU73
 293 0036 072B     		cmp	r3, #7
 294 0038 F8DD     		ble	.L15
 295              	.LBE8:
  86:Core/Src/main.c ****   CAN_TxMsg.format = STANDARD_FORMAT;
 296              		.loc 1 86 3 view .LVU74
  86:Core/Src/main.c ****   CAN_TxMsg.format = STANDARD_FORMAT;
 297              		.loc 1 86 17 is_stmt 0 view .LVU75
 298 003a 0C4B     		ldr	r3, .L20
 299              	.LVL15:
  86:Core/Src/main.c ****   CAN_TxMsg.format = STANDARD_FORMAT;
 300              		.loc 1 86 17 view .LVU76
ARM GAS  /tmp/ccAGqcSK.s 			page 13


 301 003c 0122     		movs	r2, #1
 302 003e 1A73     		strb	r2, [r3, #12]
  87:Core/Src/main.c ****   CAN_TxMsg.type   = DATA_FRAME;
 303              		.loc 1 87 3 is_stmt 1 view .LVU77
  87:Core/Src/main.c ****   CAN_TxMsg.type   = DATA_FRAME;
 304              		.loc 1 87 20 is_stmt 0 view .LVU78
 305 0040 0022     		movs	r2, #0
 306 0042 5A73     		strb	r2, [r3, #13]
  88:Core/Src/main.c **** 
 307              		.loc 1 88 3 is_stmt 1 view .LVU79
  88:Core/Src/main.c **** 
 308              		.loc 1 88 20 is_stmt 0 view .LVU80
 309 0044 9A73     		strb	r2, [r3, #14]
  93:Core/Src/main.c **** 
 310              		.loc 1 93 3 is_stmt 1 view .LVU81
 311 0046 FFF7FEFF 		bl	SystemClock_Config
 312              	.LVL16:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 313              		.loc 1 100 3 view .LVU82
 314 004a FFF7FEFF 		bl	MX_GPIO_Init
 315              	.LVL17:
 316 004e 08E0     		b	.L17
 317              	.L19:
 109:Core/Src/main.c **** 
 318              		.loc 1 109 9 view .LVU83
 109:Core/Src/main.c **** 
 319              		.loc 1 109 19 is_stmt 0 view .LVU84
 320 0050 074B     		ldr	r3, .L20+4
 321 0052 0022     		movs	r2, #0
 322 0054 1A60     		str	r2, [r3]
 111:Core/Src/main.c ****       }
 323              		.loc 1 111 9 is_stmt 1 view .LVU85
 324 0056 0548     		ldr	r0, .L20
 325 0058 FFF7FEFF 		bl	CAN_WriteMessage
 326              	.LVL18:
 327              	.L16:
 113:Core/Src/main.c ****     /* USER CODE END WHILE */
 328              		.loc 1 113 7 view .LVU86
 329 005c 0548     		ldr	r0, .L20+8
 330 005e FFF7FEFF 		bl	HAL_Delay
 331              	.LVL19:
 106:Core/Src/main.c ****   {
 332              		.loc 1 106 9 view .LVU87
 333              	.L17:
 106:Core/Src/main.c ****   {
 334              		.loc 1 106 3 view .LVU88
 108:Core/Src/main.c ****         CAN_TxRdy = 0;
 335              		.loc 1 108 7 view .LVU89
 108:Core/Src/main.c ****         CAN_TxRdy = 0;
 336              		.loc 1 108 10 is_stmt 0 view .LVU90
 337 0062 034B     		ldr	r3, .L20+4
 338 0064 1B68     		ldr	r3, [r3]
 108:Core/Src/main.c ****         CAN_TxRdy = 0;
 339              		.loc 1 108 9 view .LVU91
 340 0066 002B     		cmp	r3, #0
 341 0068 F2D1     		bne	.L19
 342 006a F7E7     		b	.L16
ARM GAS  /tmp/ccAGqcSK.s 			page 14


 343              	.L21:
 344              		.align	2
 345              	.L20:
 346 006c 00000000 		.word	CAN_TxMsg
 347 0070 00000000 		.word	CAN_TxRdy
 348 0074 A0860100 		.word	100000
 349              		.cfi_endproc
 350              	.LFE65:
 352              		.text
 353              	.Letext0:
 354              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 355              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 356              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 357              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 358              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 359              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 360              		.file 9 "Core/Inc/CAN_Driver.h"
 361              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 362              		.file 11 "<built-in>"
ARM GAS  /tmp/ccAGqcSK.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccAGqcSK.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccAGqcSK.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccAGqcSK.s:74     .text.MX_GPIO_Init:0000002c $d
     /tmp/ccAGqcSK.s:79     .text.Error_Handler:00000000 $t
     /tmp/ccAGqcSK.s:85     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccAGqcSK.s:117    .text.SystemClock_Config:00000000 $t
     /tmp/ccAGqcSK.s:123    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccAGqcSK.s:227    .text.main:00000000 $t
     /tmp/ccAGqcSK.s:233    .text.main:00000000 main
     /tmp/ccAGqcSK.s:346    .text.main:0000006c $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
CAN_CLOCK_ENABLE
CAN_GPIO_Init
CAN_Setup
CAN_SetFilter
CAN_StartNormalMode
CAN_WaitReady
CAN_WriteMessage
HAL_Delay
CAN_TxMsg
CAN_TxRdy
