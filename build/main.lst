ARM GAS  /tmp/cclnhzKa.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "CAN_Driver.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cclnhzKa.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_CAN_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/cclnhzKa.s 			page 3


  91:Core/Src/main.c ****   MX_CAN_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c ****   /* USER CODE END 3 */
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief System Clock Configuration
 108:Core/Src/main.c ****   * @retval None
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** void SystemClock_Config(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 116:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 124:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     Error_Handler();
 127:Core/Src/main.c ****   }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 132:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief CAN Initialization Function
 146:Core/Src/main.c ****   * @param None
 147:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cclnhzKa.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c **** static void MX_CAN_Init(void)
 150:Core/Src/main.c **** {
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 159:Core/Src/main.c ****   hcan.Instance = CAN1;
 160:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 161:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_LOOPBACK;
 162:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 163:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 164:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_5TQ;
 165:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 166:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 167:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 168:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 169:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 170:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 171:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 176:Core/Src/main.c ****   
 177:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief GPIO Initialization Function
 183:Core/Src/main.c ****   * @param None
 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** static void MX_GPIO_Init(void)
 187:Core/Src/main.c **** {
  26              		.loc 1 187 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 8
 188:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 189:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 192:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  33              		.loc 1 192 3 view .LVU1
  34              	.LBB4:
  35              		.loc 1 192 3 view .LVU2
  36              		.loc 1 192 3 view .LVU3
  37 0002 0A4B     		ldr	r3, .L3
ARM GAS  /tmp/cclnhzKa.s 			page 5


  38 0004 9A69     		ldr	r2, [r3, #24]
  39 0006 42F02002 		orr	r2, r2, #32
  40 000a 9A61     		str	r2, [r3, #24]
  41              		.loc 1 192 3 view .LVU4
  42 000c 9A69     		ldr	r2, [r3, #24]
  43 000e 02F02002 		and	r2, r2, #32
  44 0012 0092     		str	r2, [sp]
  45              		.loc 1 192 3 view .LVU5
  46 0014 009A     		ldr	r2, [sp]
  47              	.LBE4:
  48              		.loc 1 192 3 view .LVU6
 193:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 193 3 view .LVU7
  50              	.LBB5:
  51              		.loc 1 193 3 view .LVU8
  52              		.loc 1 193 3 view .LVU9
  53 0016 9A69     		ldr	r2, [r3, #24]
  54 0018 42F00402 		orr	r2, r2, #4
  55 001c 9A61     		str	r2, [r3, #24]
  56              		.loc 1 193 3 view .LVU10
  57 001e 9B69     		ldr	r3, [r3, #24]
  58 0020 03F00403 		and	r3, r3, #4
  59 0024 0193     		str	r3, [sp, #4]
  60              		.loc 1 193 3 view .LVU11
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE5:
  63              		.loc 1 193 3 view .LVU12
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 196:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 197:Core/Src/main.c **** }
  64              		.loc 1 197 1 is_stmt 0 view .LVU13
  65 0028 02B0     		add	sp, sp, #8
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 002a 7047     		bx	lr
  69              	.L4:
  70              		.align	2
  71              	.L3:
  72 002c 00100240 		.word	1073876992
  73              		.cfi_endproc
  74              	.LFE68:
  76              		.section	.text.Error_Handler,"ax",%progbits
  77              		.align	1
  78              		.global	Error_Handler
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  83              	Error_Handler:
  84              	.LFB69:
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /* USER CODE END 4 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/cclnhzKa.s 			page 6


 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** void Error_Handler(void)
 208:Core/Src/main.c **** {
  85              		.loc 1 208 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 209:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 210:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 211:Core/Src/main.c ****   __disable_irq();
  91              		.loc 1 211 3 view .LVU15
  92              	.LBB6:
  93              	.LBI6:
  94              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /tmp/cclnhzKa.s 			page 7


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cclnhzKa.s 			page 8


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  95              		.loc 2 140 27 view .LVU16
  96              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97              		.loc 2 142 3 view .LVU17
  98              		.syntax unified
  99              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 100 0000 72B6     		cpsid i
 101              	@ 0 "" 2
 102              		.thumb
 103              		.syntax unified
 104              	.L6:
 105              	.LBE7:
 106              	.LBE6:
ARM GAS  /tmp/cclnhzKa.s 			page 9


 212:Core/Src/main.c ****   while (1)
 107              		.loc 1 212 3 view .LVU18
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****   }
 108              		.loc 1 214 3 view .LVU19
 212:Core/Src/main.c ****   while (1)
 109              		.loc 1 212 9 view .LVU20
 110 0002 FEE7     		b	.L6
 111              		.cfi_endproc
 112              	.LFE69:
 114              		.section	.text.MX_CAN_Init,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	MX_CAN_Init:
 121              	.LFB67:
 150:Core/Src/main.c **** 
 122              		.loc 1 150 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 3, -8
 129              		.cfi_offset 14, -4
 159:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 130              		.loc 1 159 3 view .LVU22
 159:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 131              		.loc 1 159 17 is_stmt 0 view .LVU23
 132 0002 0E48     		ldr	r0, .L11
 133 0004 0E4B     		ldr	r3, .L11+4
 134 0006 0360     		str	r3, [r0]
 160:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_LOOPBACK;
 135              		.loc 1 160 3 is_stmt 1 view .LVU24
 160:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_LOOPBACK;
 136              		.loc 1 160 23 is_stmt 0 view .LVU25
 137 0008 0923     		movs	r3, #9
 138 000a 4360     		str	r3, [r0, #4]
 161:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 139              		.loc 1 161 3 is_stmt 1 view .LVU26
 161:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 140              		.loc 1 161 18 is_stmt 0 view .LVU27
 141 000c 4FF08043 		mov	r3, #1073741824
 142 0010 8360     		str	r3, [r0, #8]
 162:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 143              		.loc 1 162 3 is_stmt 1 view .LVU28
 162:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_10TQ;
 144              		.loc 1 162 27 is_stmt 0 view .LVU29
 145 0012 0023     		movs	r3, #0
 146 0014 C360     		str	r3, [r0, #12]
 163:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_5TQ;
 147              		.loc 1 163 3 is_stmt 1 view .LVU30
 163:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_5TQ;
 148              		.loc 1 163 22 is_stmt 0 view .LVU31
 149 0016 4FF41022 		mov	r2, #589824
 150 001a 0261     		str	r2, [r0, #16]
ARM GAS  /tmp/cclnhzKa.s 			page 10


 164:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 151              		.loc 1 164 3 is_stmt 1 view .LVU32
 164:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 152              		.loc 1 164 22 is_stmt 0 view .LVU33
 153 001c 4FF48002 		mov	r2, #4194304
 154 0020 4261     		str	r2, [r0, #20]
 165:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 155              		.loc 1 165 3 is_stmt 1 view .LVU34
 165:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 156              		.loc 1 165 31 is_stmt 0 view .LVU35
 157 0022 0376     		strb	r3, [r0, #24]
 166:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 158              		.loc 1 166 3 is_stmt 1 view .LVU36
 166:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 159              		.loc 1 166 24 is_stmt 0 view .LVU37
 160 0024 4376     		strb	r3, [r0, #25]
 167:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 161              		.loc 1 167 3 is_stmt 1 view .LVU38
 167:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 162              		.loc 1 167 24 is_stmt 0 view .LVU39
 163 0026 8376     		strb	r3, [r0, #26]
 168:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 164              		.loc 1 168 3 is_stmt 1 view .LVU40
 168:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 165              		.loc 1 168 32 is_stmt 0 view .LVU41
 166 0028 0122     		movs	r2, #1
 167 002a C276     		strb	r2, [r0, #27]
 169:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 168              		.loc 1 169 3 is_stmt 1 view .LVU42
 169:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 169              		.loc 1 169 31 is_stmt 0 view .LVU43
 170 002c 0377     		strb	r3, [r0, #28]
 170:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 171              		.loc 1 170 3 is_stmt 1 view .LVU44
 170:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 172              		.loc 1 170 34 is_stmt 0 view .LVU45
 173 002e 4377     		strb	r3, [r0, #29]
 171:Core/Src/main.c ****   {
 174              		.loc 1 171 3 is_stmt 1 view .LVU46
 171:Core/Src/main.c ****   {
 175              		.loc 1 171 7 is_stmt 0 view .LVU47
 176 0030 FFF7FEFF 		bl	HAL_CAN_Init
 177              	.LVL0:
 171:Core/Src/main.c ****   {
 178              		.loc 1 171 6 discriminator 1 view .LVU48
 179 0034 00B9     		cbnz	r0, .L10
 179:Core/Src/main.c **** 
 180              		.loc 1 179 1 view .LVU49
 181 0036 08BD     		pop	{r3, pc}
 182              	.L10:
 173:Core/Src/main.c ****   }
 183              		.loc 1 173 5 is_stmt 1 view .LVU50
 184 0038 FFF7FEFF 		bl	Error_Handler
 185              	.LVL1:
 186              	.L12:
 187              		.align	2
 188              	.L11:
ARM GAS  /tmp/cclnhzKa.s 			page 11


 189 003c 00000000 		.word	hcan
 190 0040 00640040 		.word	1073767424
 191              		.cfi_endproc
 192              	.LFE67:
 194              		.section	.text.SystemClock_Config,"ax",%progbits
 195              		.align	1
 196              		.global	SystemClock_Config
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	SystemClock_Config:
 202              	.LFB66:
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 203              		.loc 1 111 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 64
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 00B5     		push	{lr}
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 14, -4
 210 0002 91B0     		sub	sp, sp, #68
 211              		.cfi_def_cfa_offset 72
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 212              		.loc 1 112 3 view .LVU52
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213              		.loc 1 112 22 is_stmt 0 view .LVU53
 214 0004 2822     		movs	r2, #40
 215 0006 0021     		movs	r1, #0
 216 0008 06A8     		add	r0, sp, #24
 217 000a FFF7FEFF 		bl	memset
 218              	.LVL2:
 113:Core/Src/main.c **** 
 219              		.loc 1 113 3 is_stmt 1 view .LVU54
 113:Core/Src/main.c **** 
 220              		.loc 1 113 22 is_stmt 0 view .LVU55
 221 000e 0023     		movs	r3, #0
 222 0010 0193     		str	r3, [sp, #4]
 223 0012 0293     		str	r3, [sp, #8]
 224 0014 0393     		str	r3, [sp, #12]
 225 0016 0493     		str	r3, [sp, #16]
 226 0018 0593     		str	r3, [sp, #20]
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 227              		.loc 1 118 3 is_stmt 1 view .LVU56
 118:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 228              		.loc 1 118 36 is_stmt 0 view .LVU57
 229 001a 0223     		movs	r3, #2
 230 001c 0693     		str	r3, [sp, #24]
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 231              		.loc 1 119 3 is_stmt 1 view .LVU58
 119:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 232              		.loc 1 119 30 is_stmt 0 view .LVU59
 233 001e 0122     		movs	r2, #1
 234 0020 0A92     		str	r2, [sp, #40]
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 235              		.loc 1 120 3 is_stmt 1 view .LVU60
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 236              		.loc 1 120 41 is_stmt 0 view .LVU61
ARM GAS  /tmp/cclnhzKa.s 			page 12


 237 0022 1022     		movs	r2, #16
 238 0024 0B92     		str	r2, [sp, #44]
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 239              		.loc 1 121 3 is_stmt 1 view .LVU62
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 240              		.loc 1 121 34 is_stmt 0 view .LVU63
 241 0026 0D93     		str	r3, [sp, #52]
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 242              		.loc 1 122 3 is_stmt 1 view .LVU64
 123:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 243              		.loc 1 123 3 view .LVU65
 123:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244              		.loc 1 123 32 is_stmt 0 view .LVU66
 245 0028 4FF4E013 		mov	r3, #1835008
 246 002c 0F93     		str	r3, [sp, #60]
 124:Core/Src/main.c ****   {
 247              		.loc 1 124 3 is_stmt 1 view .LVU67
 124:Core/Src/main.c ****   {
 248              		.loc 1 124 7 is_stmt 0 view .LVU68
 249 002e 06A8     		add	r0, sp, #24
 250 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 251              	.LVL3:
 124:Core/Src/main.c ****   {
 252              		.loc 1 124 6 discriminator 1 view .LVU69
 253 0034 78B9     		cbnz	r0, .L17
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 254              		.loc 1 131 3 is_stmt 1 view .LVU70
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 255              		.loc 1 131 31 is_stmt 0 view .LVU71
 256 0036 0F23     		movs	r3, #15
 257 0038 0193     		str	r3, [sp, #4]
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 258              		.loc 1 133 3 is_stmt 1 view .LVU72
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 259              		.loc 1 133 34 is_stmt 0 view .LVU73
 260 003a 0223     		movs	r3, #2
 261 003c 0293     		str	r3, [sp, #8]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 262              		.loc 1 134 3 is_stmt 1 view .LVU74
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 263              		.loc 1 134 35 is_stmt 0 view .LVU75
 264 003e 0023     		movs	r3, #0
 265 0040 0393     		str	r3, [sp, #12]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 266              		.loc 1 135 3 is_stmt 1 view .LVU76
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 267              		.loc 1 135 36 is_stmt 0 view .LVU77
 268 0042 0493     		str	r3, [sp, #16]
 136:Core/Src/main.c **** 
 269              		.loc 1 136 3 is_stmt 1 view .LVU78
 136:Core/Src/main.c **** 
 270              		.loc 1 136 36 is_stmt 0 view .LVU79
 271 0044 0593     		str	r3, [sp, #20]
 138:Core/Src/main.c ****   {
 272              		.loc 1 138 3 is_stmt 1 view .LVU80
 138:Core/Src/main.c ****   {
 273              		.loc 1 138 7 is_stmt 0 view .LVU81
ARM GAS  /tmp/cclnhzKa.s 			page 13


 274 0046 0121     		movs	r1, #1
 275 0048 01A8     		add	r0, sp, #4
 276 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 277              	.LVL4:
 138:Core/Src/main.c ****   {
 278              		.loc 1 138 6 discriminator 1 view .LVU82
 279 004e 20B9     		cbnz	r0, .L18
 142:Core/Src/main.c **** 
 280              		.loc 1 142 1 view .LVU83
 281 0050 11B0     		add	sp, sp, #68
 282              		.cfi_remember_state
 283              		.cfi_def_cfa_offset 4
 284              		@ sp needed
 285 0052 5DF804FB 		ldr	pc, [sp], #4
 286              	.L17:
 287              		.cfi_restore_state
 126:Core/Src/main.c ****   }
 288              		.loc 1 126 5 is_stmt 1 view .LVU84
 289 0056 FFF7FEFF 		bl	Error_Handler
 290              	.LVL5:
 291              	.L18:
 140:Core/Src/main.c ****   }
 292              		.loc 1 140 5 view .LVU85
 293 005a FFF7FEFF 		bl	Error_Handler
 294              	.LVL6:
 295              		.cfi_endproc
 296              	.LFE66:
 298              		.section	.text.main,"ax",%progbits
 299              		.align	1
 300              		.global	main
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 305              	main:
 306              	.LFB65:
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 307              		.loc 1 68 1 view -0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312 0000 08B5     		push	{r3, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 3, -8
 315              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 316              		.loc 1 76 3 view .LVU87
 317 0002 FFF7FEFF 		bl	HAL_Init
 318              	.LVL7:
  83:Core/Src/main.c **** 
 319              		.loc 1 83 3 view .LVU88
 320 0006 FFF7FEFF 		bl	SystemClock_Config
 321              	.LVL8:
  90:Core/Src/main.c ****   MX_CAN_Init();
 322              		.loc 1 90 3 view .LVU89
 323 000a FFF7FEFF 		bl	MX_GPIO_Init
 324              	.LVL9:
ARM GAS  /tmp/cclnhzKa.s 			page 14


  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 325              		.loc 1 91 3 view .LVU90
 326 000e FFF7FEFF 		bl	MX_CAN_Init
 327              	.LVL10:
 328              	.L20:
  97:Core/Src/main.c ****   {
 329              		.loc 1 97 3 view .LVU91
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 330              		.loc 1 102 3 view .LVU92
  97:Core/Src/main.c ****   {
 331              		.loc 1 97 9 view .LVU93
 332 0012 FEE7     		b	.L20
 333              		.cfi_endproc
 334              	.LFE65:
 336              		.global	hcan
 337              		.section	.bss.hcan,"aw",%nobits
 338              		.align	2
 341              	hcan:
 342 0000 00000000 		.space	40
 342      00000000 
 342      00000000 
 342      00000000 
 342      00000000 
 343              		.text
 344              	.Letext0:
 345              		.file 3 "/home/bugraaa/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 346              		.file 4 "/home/bugraaa/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 347              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 348              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 349              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 350              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 351              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 352              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 353              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 354              		.file 12 "<built-in>"
ARM GAS  /tmp/cclnhzKa.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cclnhzKa.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/cclnhzKa.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cclnhzKa.s:72     .text.MX_GPIO_Init:0000002c $d
     /tmp/cclnhzKa.s:77     .text.Error_Handler:00000000 $t
     /tmp/cclnhzKa.s:83     .text.Error_Handler:00000000 Error_Handler
     /tmp/cclnhzKa.s:115    .text.MX_CAN_Init:00000000 $t
     /tmp/cclnhzKa.s:120    .text.MX_CAN_Init:00000000 MX_CAN_Init
     /tmp/cclnhzKa.s:189    .text.MX_CAN_Init:0000003c $d
     /tmp/cclnhzKa.s:341    .bss.hcan:00000000 hcan
     /tmp/cclnhzKa.s:195    .text.SystemClock_Config:00000000 $t
     /tmp/cclnhzKa.s:201    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cclnhzKa.s:299    .text.main:00000000 $t
     /tmp/cclnhzKa.s:305    .text.main:00000000 main
     /tmp/cclnhzKa.s:338    .bss.hcan:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
